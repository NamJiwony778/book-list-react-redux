{"ast":null,"code":"import { ADD_BOOK, DELETE_BOOK } from '../types'; // const initialState = {booksArray: [{id: 0, name: 'Lord of the flies', price: 12.00, category: 'dystopian'}]};\n\nconst initialState = {\n  booksArray: []\n};\n\nfunction nextBookId(booksArray) {\n  const maxId = booksArray.reduce((maxId, booksArray) => Math.max(booksArray.id, maxId), -1);\n  return maxId + 1;\n}\n\nexport default function (state = initialState, action) {\n  console.log(\"Book state = \" + JSON.stringify(action.type));\n\n  switch (action.type) {\n    case ADD_BOOK:\n      console.log(\"Book in reducer \" + JSON.stringify([...state.booksArray, {\n        id: nextBookId(state.booksArray),\n        name: action.payload.name,\n        price: action.payload.price,\n        category: action.payload.category\n      }]));\n      console.log(\"Book inbnm,, \" + JSON.stringify(...state.booksArray));\n      return { ...state,\n        booksArray: [...state.booksArray, {\n          id: nextBookId(state.booksArray),\n          name: action.payload.name,\n          price: action.payload.price,\n          category: action.payload.category\n        }]\n      };\n\n    case DELETE_BOOK:\n      console.log('3 ' + action.type);\n      let books = [...state.booksArray];\n      let newBooksArr = books.filter(book => book !== action.payload);\n      console.log(\"newBooksArr \" + JSON.stringify(newBooksArr));\n      return { ...state,\n        booksArray: newBooksArr\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Mary/projects/book-list-react-redux/src/redux/reducers/bookslist.reducer.js"],"names":["ADD_BOOK","DELETE_BOOK","initialState","booksArray","nextBookId","maxId","reduce","Math","max","id","state","action","console","log","JSON","stringify","type","name","payload","price","category","books","newBooksArr","filter","book"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,UAAtC,C,CAGA;;AACA,MAAMC,YAAY,GAAG;AAACC,EAAAA,UAAU,EAAE;AAAb,CAArB;;AAEA,SAASC,UAAT,CAAoBD,UAApB,EAAgC;AAC5B,QAAME,KAAK,GAAGF,UAAU,CAACG,MAAX,CAAkB,CAACD,KAAD,EAAQF,UAAR,KAAuBI,IAAI,CAACC,GAAL,CAASL,UAAU,CAACM,EAApB,EAAwBJ,KAAxB,CAAzC,EAAyE,CAAC,CAA1E,CAAd;AACA,SAAOA,KAAK,GAAG,CAAf;AACH;;AAGD,eAAe,UAASK,KAAK,GAAGR,YAAjB,EAA+BS,MAA/B,EAAuC;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBC,IAAI,CAACC,SAAL,CAAeJ,MAAM,CAACK,IAAtB,CAA9B;;AACA,UAAOL,MAAM,CAACK,IAAd;AACI,SAAKhB,QAAL;AACIY,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBC,IAAI,CAACC,SAAL,CAAe,CAAE,GAAGL,KAAK,CAACP,UAAX,EAAuB;AAACM,QAAAA,EAAE,EAAEL,UAAU,CAACM,KAAK,CAACP,UAAP,CAAf;AACvEc,QAAAA,IAAI,EAAEN,MAAM,CAACO,OAAP,CAAeD,IADkD;AAC5CE,QAAAA,KAAK,EAAER,MAAM,CAACO,OAAP,CAAeC,KADsB;AACfC,QAAAA,QAAQ,EAAET,MAAM,CAACO,OAAP,CAAeE;AADV,OAAvB,CAAf,CAAjC;AAEAR,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBC,IAAI,CAACC,SAAL,CAAe,GAAGL,KAAK,CAACP,UAAxB,CAA9B;AAEA,aAAO,EACH,GAAGO,KADA;AAEHP,QAAAA,UAAU,EAAE,CAAE,GAAGO,KAAK,CAACP,UAAX,EAAuB;AAACM,UAAAA,EAAE,EAAEL,UAAU,CAACM,KAAK,CAACP,UAAP,CAAf;AACnCc,UAAAA,IAAI,EAAEN,MAAM,CAACO,OAAP,CAAeD,IADc;AACRE,UAAAA,KAAK,EAAER,MAAM,CAACO,OAAP,CAAeC,KADd;AACqBC,UAAAA,QAAQ,EAAET,MAAM,CAACO,OAAP,CAAeE;AAD9C,SAAvB;AAFT,OAAP;;AAKJ,SAAKnB,WAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAMF,MAAM,CAACK,IAAzB;AACA,UAAIK,KAAK,GAAK,CAAE,GAAGX,KAAK,CAACP,UAAX,CAAd;AACA,UAAImB,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAKb,MAAM,CAACO,OAArC,CAAlB;AACFN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBC,IAAI,CAACC,SAAL,CAAeO,WAAf,CAA7B;AACE,aAAO,EACF,GAAGZ,KADD;AAEFP,QAAAA,UAAU,EAAEmB;AAFV,OAAP;;AAKC;AACD,aAAOZ,KAAP;AAtBR;AAwBH","sourcesContent":["import { ADD_BOOK, DELETE_BOOK } from '../types';\r\n\r\n\r\n// const initialState = {booksArray: [{id: 0, name: 'Lord of the flies', price: 12.00, category: 'dystopian'}]};\r\nconst initialState = {booksArray: []};\r\n\r\nfunction nextBookId(booksArray) {\r\n    const maxId = booksArray.reduce((maxId, booksArray) => Math.max(booksArray.id, maxId), -1)\r\n    return maxId + 1\r\n}\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    console.log(\"Book state = \" + JSON.stringify(action.type));\r\n    switch(action.type) {\r\n        case ADD_BOOK: \r\n            console.log(\"Book in reducer \" + JSON.stringify([ ...state.booksArray, {id: nextBookId(state.booksArray),\r\n            name: action.payload.name, price: action.payload.price, category: action.payload.category}]  ));\r\n            console.log(\"Book inbnm,, \" + JSON.stringify(...state.booksArray));\r\n          \r\n            return {\r\n                ...state, \r\n                booksArray: [ ...state.booksArray, {id: nextBookId(state.booksArray),\r\n                name: action.payload.name, price: action.payload.price, category: action.payload.category}]  }\r\n            \r\n        case DELETE_BOOK:\r\n            console.log('3 '+ action.type);\r\n            let books =  ([ ...state.booksArray])\r\n            let newBooksArr = books.filter(book => book !== action.payload);\r\n          console.log(\"newBooksArr \" + JSON.stringify(newBooksArr));\r\n            return {\r\n                 ...state, \r\n                 booksArray: newBooksArr\r\n            }\r\n\r\n             default: \r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}