{"ast":null,"code":"import { ADD_BOOK, DELETE_BOOK } from '../types';\nconst initialState = {\n  booksArray: [{\n    id: 0,\n    name: 'Lord of the flies',\n    price: 12.00,\n    category: 'dystopian'\n  }]\n};\n\nfunction nextBookId(booksArray) {\n  const maxId = booksArray.reduce((maxId, booksArray) => Math.max(booksArray.id, maxId), -1);\n  return maxId + 1;\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_BOOK:\n      console.log(\"Book in reducer \" + JSON.stringify([...state.booksArray, {\n        id: nextBookId(state.booksArray),\n        name: action.payload.name,\n        price: action.payload.price,\n        category: action.payload.category\n      }]));\n      console.log(\"Book inbnm,, \" + JSON.stringify(...state.booksArray));\n      console.log('action type ' + action.type);\n      console.log('2 ' + DELETE_BOOK);\n      return { ...state,\n        booksArray: [...state.booksArray, {\n          id: nextBookId(state.booksArray),\n          name: action.payload.name,\n          price: action.payload.price,\n          category: action.payload.category\n        }]\n      };\n\n    case DELETE_BOOK:\n      console.log('3 ' + DELETE_BOOK);\n      let books = [...state.booksArray, {\n        id: action.payload.id,\n        name: action.payload.name,\n        price: action.payload.price,\n        category: action.payload.category\n      }];\n      console.log(\"Books \" + JSON.stringify(books)); // delete books[action.payload];\n      // let newBooksArr = books.filter(book => book !== action.payload);\n      //    console.log(\"newBooksArr \" + JSON.stringify(newBooksArr));\n\n      return { ...state,\n        booksArray: action.type //  booksArray:  books.filter(book => book !== action.payload.booksArray)\n\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Mary/test_tasks/booksList/bookslist/src/redux/reducers/bookslist.reducer.js"],"names":["ADD_BOOK","DELETE_BOOK","initialState","booksArray","id","name","price","category","nextBookId","maxId","reduce","Math","max","state","action","type","console","log","JSON","stringify","payload","books"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,UAAtC;AAGA,MAAMC,YAAY,GAAG;AAACC,EAAAA,UAAU,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,mBAAd;AAAmCC,IAAAA,KAAK,EAAE,KAA1C;AAAiDC,IAAAA,QAAQ,EAAE;AAA3D,GAAD;AAAb,CAArB;;AAGA,SAASC,UAAT,CAAoBL,UAApB,EAAgC;AAC5B,QAAMM,KAAK,GAAGN,UAAU,CAACO,MAAX,CAAkB,CAACD,KAAD,EAAQN,UAAR,KAAuBQ,IAAI,CAACC,GAAL,CAAST,UAAU,CAACC,EAApB,EAAwBK,KAAxB,CAAzC,EAAyE,CAAC,CAA1E,CAAd;AACA,SAAOA,KAAK,GAAG,CAAf;AACH;;AAGD,eAAe,UAASI,KAAK,GAAGX,YAAjB,EAA+BY,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,QAAL;AACIgB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBC,IAAI,CAACC,SAAL,CAAe,CAAE,GAAGN,KAAK,CAACV,UAAX,EAAuB;AAACC,QAAAA,EAAE,EAAEI,UAAU,CAACK,KAAK,CAACV,UAAP,CAAf;AACvEE,QAAAA,IAAI,EAAES,MAAM,CAACM,OAAP,CAAef,IADkD;AAC5CC,QAAAA,KAAK,EAAEQ,MAAM,CAACM,OAAP,CAAed,KADsB;AACfC,QAAAA,QAAQ,EAAEO,MAAM,CAACM,OAAP,CAAeb;AADV,OAAvB,CAAf,CAAjC;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBC,IAAI,CAACC,SAAL,CAAe,GAAGN,KAAK,CAACV,UAAxB,CAA9B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAgBH,MAAM,CAACC,IAAnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAMhB,WAAlB;AACA,aAAO,EACH,GAAGY,KADA;AAEHV,QAAAA,UAAU,EAAE,CAAE,GAAGU,KAAK,CAACV,UAAX,EAAuB;AAACC,UAAAA,EAAE,EAAEI,UAAU,CAACK,KAAK,CAACV,UAAP,CAAf;AACnCE,UAAAA,IAAI,EAAES,MAAM,CAACM,OAAP,CAAef,IADc;AACRC,UAAAA,KAAK,EAAEQ,MAAM,CAACM,OAAP,CAAed,KADd;AACqBC,UAAAA,QAAQ,EAAEO,MAAM,CAACM,OAAP,CAAeb;AAD9C,SAAvB;AAFT,OAAP;;AAKJ,SAAKN,WAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAMhB,WAAlB;AACA,UAAIoB,KAAK,GAAI,CAAC,GAAGR,KAAK,CAACV,UAAV,EAAsB;AAACC,QAAAA,EAAE,EAAEU,MAAM,CAACM,OAAP,CAAehB,EAApB;AAC/BC,QAAAA,IAAI,EAAES,MAAM,CAACM,OAAP,CAAef,IADU;AACJC,QAAAA,KAAK,EAAEQ,MAAM,CAACM,OAAP,CAAed,KADlB;AACyBC,QAAAA,QAAQ,EAAEO,MAAM,CAACM,OAAP,CAAeb;AADlD,OAAtB,CAAb;AAEIS,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWC,IAAI,CAACC,SAAL,CAAeE,KAAf,CAAvB,EAJR,CAKI;AACA;AACJ;;AACI,aAAO,EACF,GAAGR,KADD;AAEFV,QAAAA,UAAU,EAAEW,MAAM,CAACC,IAFjB,CAGH;;AAHG,OAAP;;AAOA;AACA,aAAOF,KAAP;AA5BR;AA8BH","sourcesContent":["import { ADD_BOOK, DELETE_BOOK } from '../types';\r\n\r\n\r\nconst initialState = {booksArray: [{id: 0, name: 'Lord of the flies', price: 12.00, category: 'dystopian'}]};\r\n\r\n\r\nfunction nextBookId(booksArray) {\r\n    const maxId = booksArray.reduce((maxId, booksArray) => Math.max(booksArray.id, maxId), -1)\r\n    return maxId + 1\r\n}\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case ADD_BOOK: \r\n            console.log(\"Book in reducer \" + JSON.stringify([ ...state.booksArray, {id: nextBookId(state.booksArray),\r\n            name: action.payload.name, price: action.payload.price, category: action.payload.category}]  ));\r\n            console.log(\"Book inbnm,, \" + JSON.stringify(...state.booksArray));\r\n            console.log('action type '+ action.type);\r\n            console.log('2 '+ DELETE_BOOK);\r\n            return {\r\n                ...state, \r\n                booksArray: [ ...state.booksArray, {id: nextBookId(state.booksArray),\r\n                name: action.payload.name, price: action.payload.price, category: action.payload.category}]  }\r\n            \r\n        case DELETE_BOOK:\r\n            console.log('3 '+ DELETE_BOOK);\r\n            let books =  [...state.booksArray, {id: action.payload.id,\r\n                name: action.payload.name, price: action.payload.price, category: action.payload.category}];\r\n                console.log(\"Books \" + JSON.stringify(books));\r\n            // delete books[action.payload];\r\n            // let newBooksArr = books.filter(book => book !== action.payload);\r\n        //    console.log(\"newBooksArr \" + JSON.stringify(newBooksArr));\r\n            return {\r\n                 ...state, \r\n                 booksArray: action.type\r\n                //  booksArray:  books.filter(book => book !== action.payload.booksArray)\r\n              \r\n            }\r\n\r\n            default: \r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}