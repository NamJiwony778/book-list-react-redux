{"ast":null,"code":"import { ADD_BOOK } from '../types';\nconst initialState = {\n  booksArray: [{\n    id: 0,\n    name: 'Lord of the flies',\n    price: 12.00,\n    category: 'dystopian'\n  }]\n};\n\nfunction nextBookId(booksArray) {\n  const maxId = booksArray.reduce((maxId, booksArray) => Math.max(booksArray.id, maxId), -1);\n  return maxId + 1;\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_BOOK:\n      // console.log(\"cvcvv\" + {...state, booksArray: [ ...state.booksArray, {id: nextBookId(state.booksArray),\n      //     name: action.payload.name, price: action.payload.price, category: action.payload.category}]  });\n      //     return {...state, booksArray: [ ...state.booksArray, {id: nextBookId(state.booksArray),\n      //     name: action.payload.name, price: action.payload.price, category: action.payload.category}]  }\n      console.log(\"cvcvv\" + JSON.stringify({ ...state,\n        booksArray: [...state.booksArray, {\n          id: nextBookId(state.booksArray),\n          name: action.book.name,\n          price: action.book.price,\n          category: action.book.category\n        }]\n      }));\n      return { ...state,\n        booksArray: [...state.booksArray, {\n          id: nextBookId(state.booksArray),\n          name: action.book.name,\n          price: action.book.price,\n          category: action.book.category\n        }]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Mary/test_tasks/booksList/bookslist/src/redux/reducers/bookslist.reducer.js"],"names":["ADD_BOOK","initialState","booksArray","id","name","price","category","nextBookId","maxId","reduce","Math","max","state","action","type","console","log","JSON","stringify","book"],"mappings":"AAAA,SAASA,QAAT,QAAyB,UAAzB;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,UAAU,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,mBAAd;AAAmCC,IAAAA,KAAK,EAAE,KAA1C;AAAiDC,IAAAA,QAAQ,EAAE;AAA3D,GAAD;AAAb,CAArB;;AAGA,SAASC,UAAT,CAAoBL,UAApB,EAAgC;AAC5B,QAAMM,KAAK,GAAGN,UAAU,CAACO,MAAX,CAAkB,CAACD,KAAD,EAAQN,UAAR,KAAuBQ,IAAI,CAACC,GAAL,CAAST,UAAU,CAACC,EAApB,EAAwBK,KAAxB,CAAzC,EAAyE,CAAC,CAA1E,CAAd;AACA,SAAOA,KAAK,GAAG,CAAf;AACH;;AAGD,eAAe,UAAUI,KAAK,GAAGX,YAAlB,EAAgCY,MAAhC,EAAwC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,QAAL;AACA;AACA;AACA;AACA;AAEKe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUC,IAAI,CAACC,SAAL,CAAe,EAAC,GAAGN,KAAJ;AAAWV,QAAAA,UAAU,EAAE,CAAE,GAAGU,KAAK,CAACV,UAAX,EAAuB;AAACC,UAAAA,EAAE,EAAEI,UAAU,CAACK,KAAK,CAACV,UAAP,CAAf;AACpFE,UAAAA,IAAI,EAAES,MAAM,CAACM,IAAP,CAAYf,IADkE;AAC5DC,UAAAA,KAAK,EAAEQ,MAAM,CAACM,IAAP,CAAYd,KADyC;AAClCC,UAAAA,QAAQ,EAAEO,MAAM,CAACM,IAAP,CAAYb;AADY,SAAvB;AAAvB,OAAf,CAAtB;AAED,aAAO,EAAC,GAAGM,KAAJ;AAAWV,QAAAA,UAAU,EAAE,CAAE,GAAGU,KAAK,CAACV,UAAX,EAAuB;AAACC,UAAAA,EAAE,EAAEI,UAAU,CAACK,KAAK,CAACV,UAAP,CAAf;AACrDE,UAAAA,IAAI,EAAES,MAAM,CAACM,IAAP,CAAYf,IADmC;AAC7BC,UAAAA,KAAK,EAAEQ,MAAM,CAACM,IAAP,CAAYd,KADU;AACHC,UAAAA,QAAQ,EAAEO,MAAM,CAACM,IAAP,CAAYb;AADnB,SAAvB;AAAvB,OAAP;;AAGA;AACA,aAAOM,KAAP;AAbR;AAeH","sourcesContent":["import { ADD_BOOK } from '../types';\r\n\r\nconst initialState = {booksArray: [{id: 0, name: 'Lord of the flies', price: 12.00, category: 'dystopian'}]};\r\n\r\n\r\nfunction nextBookId(booksArray) {\r\n    const maxId = booksArray.reduce((maxId, booksArray) => Math.max(booksArray.id, maxId), -1)\r\n    return maxId + 1\r\n}\r\n\r\n\r\nexport default function( state = initialState, action) {\r\n    switch(action.type) {\r\n        case ADD_BOOK: \r\n        // console.log(\"cvcvv\" + {...state, booksArray: [ ...state.booksArray, {id: nextBookId(state.booksArray),\r\n        //     name: action.payload.name, price: action.payload.price, category: action.payload.category}]  });\r\n        //     return {...state, booksArray: [ ...state.booksArray, {id: nextBookId(state.booksArray),\r\n        //     name: action.payload.name, price: action.payload.price, category: action.payload.category}]  }\r\n\r\n             console.log(\"cvcvv\" + JSON.stringify({...state, booksArray: [ ...state.booksArray, {id: nextBookId(state.booksArray),\r\n            name: action.book.name, price: action.book.price, category: action.book.category}]  }));\r\n            return {...state, booksArray: [ ...state.booksArray, {id: nextBookId(state.booksArray),\r\n            name: action.book.name, price: action.book.price, category: action.book.category}]  }\r\n\r\n            default: \r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}