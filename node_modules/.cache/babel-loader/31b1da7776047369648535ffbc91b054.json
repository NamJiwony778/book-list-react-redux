{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mary\\\\projects\\\\book-list-react-redux\\\\src\\\\components\\\\booklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport Modal from \"./modal\";\nimport { connect, useDispatch } from \"react-redux\";\nimport '../styles/stylesApp.css';\nimport { deleteBook } from '../redux/actions'; // let array = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList(booksList) {\n  _s();\n\n  let array = booksList.booklist.booksArray;\n  const dispatch = useDispatch();\n  let selectedBook;\n  let updatedBook; // const [nameValue, setNameValue] = useState();\n  // const [priceValue, setPriceValue] = useState();\n  // const [categoryValue, setCategoryValue] = useState();\n  // const [idValue, setIdValue] = useState();\n\n  function getChosenToUpdateBook(id) {\n    array.some(function (obj) {\n      if (obj.id === id) {\n        updatedBook = obj;\n      }\n    });\n    console.log(\"update\" + JSON.stringify(updatedBook));\n    setNameValue(updatedBook.name);\n    setPriceValue(updatedBook.price);\n    setCategoryValue(updatedBook.category);\n    setIdValue(updatedBook.id);\n    return updatedBook;\n  }\n\n  function removeBook(id) {\n    array.some(function (obj) {\n      if (obj.id === id) {\n        selectedBook = obj;\n      }\n    });\n\n    if (selectedBook) {\n      dispatch(deleteBook(selectedBook));\n    } else {\n      console.log(\"There is no book\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"centered highlight\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: array && array.length ? array.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"waves-effect waves-light btn-small modal-trigger\",\n                \"data-target\": \"modal1\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"waves-effect red waves-light btn-small\",\n                id: item.id,\n                onClick: e => e = removeBook(item.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, `booksList-${item.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this);\n        }) : \"No books, yay!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = BookList;\n\nconst mapStateToProps = state => {\n  const booksList = state;\n  return booksList;\n};\n\nconst mapDispatchToProps = {\n  deleteBook\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["C:/Mary/projects/book-list-react-redux/src/components/booklist.js"],"names":["React","useState","Modal","connect","useDispatch","deleteBook","BookList","booksList","array","booklist","booksArray","dispatch","selectedBook","updatedBook","getChosenToUpdateBook","id","some","obj","console","log","JSON","stringify","setNameValue","name","setPriceValue","price","setCategoryValue","category","setIdValue","removeBook","length","map","item","e","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React,  { useState } from \"react\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport Modal from \"./modal\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport '../styles/stylesApp.css';\r\nimport  { deleteBook }  from '../redux/actions';\r\n\r\n\r\n// let array = [];\r\n\r\nfunction BookList (booksList) {\r\n  let array = booksList.booklist.booksArray;\r\n  const dispatch = useDispatch();\r\n\r\n  let selectedBook\r\n  let updatedBook;\r\n\r\n  // const [nameValue, setNameValue] = useState();\r\n  // const [priceValue, setPriceValue] = useState();\r\n  // const [categoryValue, setCategoryValue] = useState();\r\n  // const [idValue, setIdValue] = useState();\r\n\r\n  function  getChosenToUpdateBook(id) {\r\n    array.some(function(obj) {\r\n     if (obj.id === id) {\r\n       updatedBook = obj;\r\n     }\r\n   })\r\n   console.log(\"update\" + JSON.stringify(updatedBook));\r\n   \r\n   setNameValue(updatedBook.name);\r\n   setPriceValue(updatedBook.price);\r\n   setCategoryValue(updatedBook.category);\r\n   setIdValue(updatedBook.id);\r\n   \r\n \r\n   return updatedBook;\r\n }\r\n\r\n\r\n\r\n  function removeBook (id) {\r\n    array.some(function(obj) {\r\n      if (obj.id === id) {\r\n        selectedBook = obj;\r\n      }\r\n    })\r\n  \r\n    if (selectedBook) {\r\n      dispatch(deleteBook(selectedBook))\r\n    } else {\r\n        console.log(\"There is no book\");\r\n    }\r\n\r\n  }\r\n\r\n    return (\r\n        <div>\r\n          <Modal />\r\n\r\n          <table className=\"centered highlight\">\r\n            <thead>\r\n              <tr>\r\n                  <th>Name</th>\r\n                  <th>Price</th>\r\n                  <th>Category</th>\r\n                  <th>Manage</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {array && array.length ? array.map((item) =>  {\r\n              return (<tr key={`booksList-${item.id}`}>\r\n                <td>{item.name}</td>\r\n                <td>{item.price}</td>\r\n                <td>{item.category}</td>\r\n                <td><a className=\"waves-effect waves-light btn-small modal-trigger\" data-target=\"modal1\">Update</a> \r\n                <div className=\"divider\"/>\r\n                <a className=\"waves-effect red waves-light btn-small\" id={item.id} onClick={(e) => e = removeBook(item.id)}>Delete</a></td>\r\n                </tr>);\r\n              })\r\n              : \"No books, yay!\"}\r\n            </tbody>\r\n         </table>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  const mapStateToProps = (state) => {\r\n    const  booksList  = state;\r\n    return  booksList;\r\n  }\r\n  \r\n  const mapDispatchToProps = {\r\n     deleteBook\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\r\n"]},"metadata":{},"sourceType":"module"}